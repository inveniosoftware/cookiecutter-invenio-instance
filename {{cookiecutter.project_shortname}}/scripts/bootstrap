#!/usr/bin/env bash
{% include 'misc/header.py' %}
set -e

{% raw %}
script_path=$(dirname "$0")
pipfile_lock_path="$script_path/../Pipfile.lock"


function check_for_pipfilelock {
  if [ ! -f $pipfile_lock_path ]; then
    if [ "$flags" == "--deploy" ]; then
      echo "Pipfile.lock' not found. Exiting"
      exit 1
    else
      echo "'Pipfile.lock' not found. Generating via 'pipenv lock --dev'..."
      pipenv lock --dev
    fi
  fi
}


# The real bootstrap script starts 20 lines below ;-)
flags=()
while test $# -gt 0; do
    case "$1" in
        # If you need to add special flags to this script, this is the place:
         --ci)
             flags=("--deploy")
        #     shift
             ;;
        *)
            # Use the flags that are passed to the script directly to sync
            flags+=("$1")
            shift
            ;;
    esac
done


# If no flag was passed to boostrap script, set to dev env.
if [ ${#flags[0]} -eq 0 ]; then
    flags=("--dev")
fi

if [ "$flags" == "--dev" ]; then
  check_for_pipfilelock
  pipenv sync --dev
  # Install application code and entrypoints from 'setup.py'
  pipenv run pip install $script_path/..
  # Build assets
  pipenv run invenio collect -v
  pipenv run invenio webpack buildall
elif [ "$flags" == "--deploy" ]; then
  check_for_pipfilelock
  pipenv install --system --deploy
  # Install application code and entrypoints from 'setup.py'
  pip install $script_path/..
  # Build assets
  invenio collect -v
  invenio webpack create
  invenio webpack install --unsafe
  invenio webpack build
fi
{% endraw %}
